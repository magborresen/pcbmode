The Board File
##############

The file ``your-board.json`` (call it what you want), is the main file of the project. This is where all of the metadata related to the project is stored, it is where all of the components
used in the project is, and it is where the project parameters are stored, etc.

So it is important that this file is well defined and maintained. 

The board file contains a JSON style dictionary and is defined as

.. code-block:: json

    {
        "metadata": {},
        "project-params": {},
        "components": {},
        "documentation": {},
        "drill-index": {},
        "drills": {},
        "outline": {},
        "shapes": {}
    }

The individual parts of the board file is described below.

metadata
================

The metadata part of the board file is a dictionary within the board dictionary and
refers to all project information that isn't used to directly generate your board. 
An example of a metadata dict can be seen below

.. code-block:: json

    "metadata": {
        "project-id": "gent-pcbmode-v5-test",
        "title": "The Gent",
        "description": "A version of The Gent for testing PCBmodE v5, cinco",
        "revision": "1",
        "creator": "Saar Drimer, Boldport",
        "contributors": "Name11 Name12, Name21 Name 22 Name 23",
        "contact-email": "saar@boldport.com",
        "sourcecode-url": "https://github.com/boldport/gent-pcbmode-v5-test",
        "license-name": "MIT",
        "license-url": "https://mit-license.org/",
        "license-text": "",
        "keywords": "keyword1, keyword2, keyword3",
        "date": "now"
    }


project-params
================

The ``project-params`` defines another dictionary that contains the actual information ``pcbmode`` needs in order to build your project. 
Here the paths for the routing and svg file must be provided. These two files are used as an input in order to build the project.
An example can be seen below.

.. code-block:: json

    "project-params": {
        "input":
        {
            "routing-file": "board-routing.json",
            "svg-file": "build/gent-pcbmode-v5-test.svg"
        },
        "output":
        {
            "svg-file": "build/gent-pcbmode-v5-test.svg",
            "gerber-preamble": "build/prod/gent-pcbmode-v5-test_"
        },
        "units": "mm",
        "stackup": "two-layer",
        "default-via-name": "default-via",
        "styles":
        {
            "layout": "default"
    }

The output part of the file defines where to put the build and gerber files. Furthermore, it is possible to define the units used
in the project as well as the board stackup structure.

components
================

The components section of the can be seen described in :ref:`placing-components`.

documentation
================

The documentation block is used to define the text generated by ``pcbmode`` for documentation. In this section
it is possible to define the documentation details about the board, such as a describtion. As seen below

.. code-block:: json

    "documentation": {
        "board-details": {
            "font-family": "Overlock-Regular-OTF-webfont", 
            "font-size": "1.5mm", 
            "letter-spacing": "0mm", 
            "line-height": "1.5mm", 
            "location": [
            -26.493447, 
            -20.144655
            ], 
            "rotate": 0, 
            "style": "fill", 
            "type": "text", 
            "value": "Board details:\nName: The Gent for testing PCBmodE v5 (Cinco)\nRevision: 1\nDescription: A chameleon shaped fun soldering kit \nLicense: MIT \nCompany: Boldport\nDesigner: Saar Drimer, saar@boldport.com"
        }, 
        "manufacturing": {
            "font-family": "Overlock-Regular-OTF-webfont", 
            "font-size": "1.5mm", 
            "letter-spacing": "0mm", 
            "line-height": "1.5mm", 
            "location": [
            -19.577785, 
            -36.116964
            ], 
            "rotate": 0, 
            "style": "fill", 
            "type": "text", 
            "value": "Manufacturing:\nRoHS and lead free compliant manufacturing process\nUnit of length: Millimetre (mm)\nNumber of layers: 2 ('top', 'bottom')\nBoard thickness: 1.6 mm\nSilkscreen: top, bottom, white\nSoldermask: top (blue and green), bottom (green)\nSurface finish: any lead free / RoHS\n\n* For the top side use two soldermask colours. Use\n     ...top_soldermask_green.ger for green soldermask\n     ...top_soldermask_blue.ger for blue soldermask.\n* Do not add any markings withough approval"
        }

It is also here where messages regarding manufacturing can be defined for processing.


drills
=============

This part of the document is used to define drill locations and the outline of the board.

.. code-block:: json

    "drill-index": {
        "location": [
            43.295852, 
            -6.3958049
        ]
        }, 
    "drills": {}, 
    "outline": {
        "shape":
            {
            "type": "path",
            "style": "stroke-width:0.05;fill:none;",
            "value": "m -23.322269,-10.602876 c 9.066461,-2.465412 19.442406,-2.061597 27.457534,-2.258901 7.238693,-0.178191 9.494707,1.133848 13.678864,4.3239373 0.738971,0.36923 0.830553,-0.4415591 0.726128,-0.7595053 -0.195775,-1.068602 -0.546474,-1.718748 -1.330759,-3.199118 -0.165718,-0.237501 0.0056,-0.524129 0.268071,-0.492077 3.208021,-0.09787 9.522027,0.389353 13.288669,1.918872 1.165238,0.473167 2.307456,-0.251058 4.25869,0.874769 0.799049,0.4610364 1.431637,1.0935507 1.700703,1.9573687 0.209826,0.6736337 0.711985,1.5780975 1.198308,2.142304 1.89198,2.1949767 3.279523,5.0193252 3.806718,8.6160621 -1.19238,6.084285 -10.192427,9.9874832 -15.603381,10.1535512 -5.445089,0.300741 -3.664206,-2.594737 -8.885295,-0.772778 -1.870106,1.092605 -30.096787,2.328583 -34.792166,-1.4808 -1.250482,-1.0145219 -2.563573,-2.0924971 -4.138069,-1.1292804 -1.760228,1.0768404 -0.28494,2.9703704 -10.907861,3.4013574 -10.622922,0.430987 -11.097984,-15.3077588 -5.929685,-19.1021288 5.963254,-4.3779962 10.95949,-3.0395648 15.203531,-4.1936332 z"
        }
    }

shapes
============

The block defines the shapes that are used on the pcb. This could be silkscreen, pour, traces, or soldermask shapes.
Meaning these are the shapes that make up the artwork of the PCB.
The shapes themselves are defined with a footprint and only used here to include them on the board at a certain location.

.. code-block:: json

    "shapes": {
        "BPL": {
            "footprint": "boldport-logo-b", 
            "layer": "bottom", 
            "location": [
            22.379667, 
            8.70253
            ], 
            "scale": 0.6, 
            "show": true
        }, 